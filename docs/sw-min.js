const VERSION="v1",CACHE_NAME="JWAX-v1";async function getFilesAndDirectories(t){const e=[],a=await fetch(t),s=await a.text();return(new DOMParser).parseFromString(s,"text/html").querySelectorAll("a").forEach((t=>{const a=t.getAttribute("href");if(!a.startsWith("http")&&!a.startsWith("//")){const t=new URL(a,self.location).pathname;e.push(t)}})),e}self.addEventListener("install",(t=>{t.waitUntil((async()=>{const t=await caches.open("JWAX-v1");try{const e=await getFilesAndDirectories("/");await Promise.all(e.map((async e=>{try{const a=await fetch(e);await t.put(e,a)}catch(t){console.error("Failed to fetch:",e,t)}})))}catch(t){console.error("Failed to fetch files and directories:",t)}})())})),self.addEventListener("activate",(t=>{t.waitUntil((async()=>{const t=await caches.keys();await Promise.all(t.map((t=>{if("JWAX-v1"!==t)return caches.delete(t)}))),await clients.claim()})())})),self.addEventListener("fetch",(t=>{t.respondWith(caches.match(t.request).then((e=>e||fetch(t.request))))}));
//# sourceMappingURL=sw-min.js.map